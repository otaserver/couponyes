apply plugin: 'com.android.application'
// 添加插件
apply plugin: "com.mob.sdk"

def gitCommitShortHash = 'git log -1 --pretty=%h'.execute([], project.rootDir).text.trim()
def gitCommitDate = 'git log -1 --pretty=%ci'.execute([], project.rootDir).text.trim().split()[0]

// Auto-incrementing commit count based on counting commits to HEAD (Build #543)
def gitCommitCount = Integer.parseInt('git rev-list HEAD --count'.execute([], project.rootDir).text.trim())

// 使用git tags 作为版本名称，需要在当前分支下有tag标签，此命令会获取最后一个tag的名称。
def gitCurrentTag = 'git describe --tags --abbrev=0'.execute([], project.rootDir).text.trim()

println "gitCommitDate==========" + gitCommitDate
println "gitCommitShortHash==========" + gitCommitShortHash
println "gitCommitCount===========" + gitCommitCount
println "gitCurrentTag============" + gitCurrentTag


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.daleyzou.zhbj"
        minSdkVersion 23
        targetSdkVersion 26
        //这里使用自动的git版本号。
        versionCode gitCommitCount
        //这里使用自动的git标签。0.0.2
        versionName gitCurrentTag
        useLibrary 'org.apache.http.legacy'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // 输出版本名到 build 目录下的 version_name.txt 文件
    applicationVariants.all { variant ->
        project.tasks["assemble${variant.name.capitalize()}"].doLast {
            new File(project.buildDir, "version_name.txt").withWriter('utf-8') {
                //it.write(variant.versionName)
                //写到文件中是一个长串 示例：0.0.2_2020-06-04(d19d6d0)
                it.write(gitCurrentTag + "(" + gitCommitDate + "_" + gitCommitShortHash + ")")
            }
        }
    }
//    aaptOptions.cruncherEnabled = false
//    aaptOptions.useNewCruncher = false
}
//可以从https://maven.google.com/web/index.html查询版本号。
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    //    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //    androidTestImplementation 'androidx.test:core:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //    引入了SlidingMenu-master库
    implementation project(':SlidingMenu-master')
    implementation files('libs/xUtils-2.6.14.jar')
    //    xUtils 3.0由于包名路径修改，升级要改动太多代码，故暂时还是用本地lib。
    //    implementation 'org.xutils:xutils:3.8.3'
    //    使用gradle从web下载库，本地不在保存lib。
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation project(':ViewPagerIndicator-master')

    implementation "androidx.appcompat:appcompat:$ANDROIDX_LIBRARY_VERSION"
    //    仿照官网自己加入的代码
    implementation 'org.permissionsdispatcher:permissionsdispatcher:4.6.0'
    annotationProcessor "org.permissionsdispatcher:permissionsdispatcher-processor:4.6.0"
    implementation files('../libs/com.otaserver.androidUtil.0.0.5.jar')  
}

// 在MobSDK的扩展中注册ShareSDK的相关信息
MobSDK {
    appKey "257150a36a59c"
    appSecret "083967ab418ef61645471141f32e2418"

    ShareSDK {
        devInfo {
            SinaWeibo {
                appKey "257150a36a59c"
                appSecret "083967ab418ef61645471141f32e2418"
                callbackUri "http://www.sharesdk.cn"
                shareByAppClient false
            }
            Wechat {
                appId "257150a36a59c"
                appSecret "083967ab418ef61645471141f32e2418"
            }
            QQ {
                appId "257150a36a59c"
                appKey "083967ab418ef61645471141f32e2418"
            }
        }
    }
}
